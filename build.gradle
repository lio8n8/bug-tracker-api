plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'groovy'
    id 'com.avast.gradle.docker-compose' version '0.9.5'
}

group = 'com.app'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'
compileJava.options.fork = true

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.security:spring-security-config')
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.liquibase:liquibase-core'
    implementation 'com.github.javafaker:javafaker:1.0.1'
    implementation 'io.springfox:springfox-swagger2:2.7.0'
    implementation 'io.springfox:springfox-swagger-ui:2.7.0'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation group: 'org.projectreactor', name: 'reactor-spring', version: '1.0.1.RELEASE'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    testImplementation 'org.spockframework:spock-spring:1.3-groovy-2.5'
    testImplementation 'org.testcontainers:testcontainers:1.12.4'
}

test {
    testLogging {
        showStandardStreams = true
    }
}

dockerCompose {
    useComposeFiles = ['docker/docker-compose-test.yml']
    isRequiredBy(project.tasks.test)
    exposeAsSystemProperties(project.tasks.test)
}

defaultTasks << 'clean'
defaultTasks << 'build'
defaultTasks << 'test'
